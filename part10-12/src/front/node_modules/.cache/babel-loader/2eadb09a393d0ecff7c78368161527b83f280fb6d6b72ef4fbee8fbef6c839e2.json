{"ast":null,"code":"var _s = $RefreshSig$();\n// import axios from \"axios\";\n// import Utils from \"../utils/Utils\";\n// import { userActions, alertActions, store } from \"../utils/Rdx\";\n\n// const API_URL = \"http://localhost:8081/api/v1\";\n// const AUTH_URL = \"http://localhost:8081/auth\";\n\n// class BackendService {\n//   login(login, password) {\n//     return axios.post(`${AUTH_URL}/login`, { login, password });\n//   }\n\n//   logout() {\n//     return axios.get(`${AUTH_URL}/logout`, {\n//       headers: { Authorization: Utils.getToken() },\n//     });\n//   }\n// }\n\n// function showError(msg) {\n//   store.dispatch(alertActions.error(msg));\n// }\n\n// axios.interceptors.request.use(\n//   (config) => {\n//     store.dispatch(alertActions.clear());\n//     let token = Utils.getToken();\n//     if (token) config.headers.Authorization = token;\n//     return config;\n//   },\n//   (error) => {\n//     showError(error.message);\n//     return Promise.reject(error);\n//   }\n// );\n\n// axios.interceptors.response.use(undefined, (error) => {\n//   if (\n//     error.response &&\n//     error.response.status &&\n//     [401, 403].indexOf(error.response.status) !== -1\n//   )\n//     showError(\"Ошибка авторизации\");\n//   else if (error.response && error.response.data && error.response.data.message)\n//     showError(error.response.data.message);\n//   else showError(error.message);\n//   return Promise.reject(error);\n// });\n\n// export default new BackendService();\n\nimport axios from \"axios\";\nimport Utils from \"../utils/Utils\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { alertActions } from \"../utils/Rdx\";\nconst API_URL = \"http://localhost:8081/api/v1\";\nconst AUTH_URL = \"http://localhost:8081/auth\";\nconst BackendService = () => {\n  _s();\n  const dispatch = useDispatch();\n  const login = (login, password) => {\n    return axios.post(`${AUTH_URL}/login`, {\n      login,\n      password\n    });\n  };\n  const logout = () => {\n    return axios.get(`${AUTH_URL}/logout`, {\n      headers: {\n        Authorization: Utils.getToken()\n      }\n    });\n  };\n  const showError = msg => {\n    dispatch(alertActions.error(msg));\n  };\n  useEffect(() => {\n    const requestInterceptor = axios.interceptors.request.use(config => {\n      dispatch(alertActions.clear());\n      let token = Utils.getToken();\n      if (token) config.headers.Authorization = token;\n      return config;\n    }, error => {\n      showError(error.message);\n      return Promise.reject(error);\n    });\n    const responseInterceptor = axios.interceptors.response.use(undefined, error => {\n      if (error.response && error.response.status && [401, 403].indexOf(error.response.status) !== -1) showError(\"Ошибка авторизации\");else if (error.response && error.response.data && error.response.data.message) showError(error.response.data.message);else showError(error.message);\n      return Promise.reject(error);\n    });\n    return () => {\n      // Cleanup interceptors\n      axios.interceptors.request.eject(requestInterceptor);\n      axios.interceptors.response.eject(responseInterceptor);\n    };\n  }, [dispatch]);\n  return {\n    login,\n    logout\n  };\n};\n_s(BackendService, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n_c = BackendService;\nexport default BackendService;\nvar _c;\n$RefreshReg$(_c, \"BackendService\");","map":{"version":3,"names":["axios","Utils","useEffect","useDispatch","alertActions","API_URL","AUTH_URL","BackendService","_s","dispatch","login","password","post","logout","get","headers","Authorization","getToken","showError","msg","error","requestInterceptor","interceptors","request","use","config","clear","token","message","Promise","reject","responseInterceptor","response","undefined","status","indexOf","data","eject","_c","$RefreshReg$"],"sources":["/home/dungodan/AndroidStudioProjects/PART_8/backend/src/front/src/services/BackendService.jsx"],"sourcesContent":["// import axios from \"axios\";\n// import Utils from \"../utils/Utils\";\n// import { userActions, alertActions, store } from \"../utils/Rdx\";\n\n// const API_URL = \"http://localhost:8081/api/v1\";\n// const AUTH_URL = \"http://localhost:8081/auth\";\n\n// class BackendService {\n//   login(login, password) {\n//     return axios.post(`${AUTH_URL}/login`, { login, password });\n//   }\n\n//   logout() {\n//     return axios.get(`${AUTH_URL}/logout`, {\n//       headers: { Authorization: Utils.getToken() },\n//     });\n//   }\n// }\n\n// function showError(msg) {\n//   store.dispatch(alertActions.error(msg));\n// }\n\n// axios.interceptors.request.use(\n//   (config) => {\n//     store.dispatch(alertActions.clear());\n//     let token = Utils.getToken();\n//     if (token) config.headers.Authorization = token;\n//     return config;\n//   },\n//   (error) => {\n//     showError(error.message);\n//     return Promise.reject(error);\n//   }\n// );\n\n// axios.interceptors.response.use(undefined, (error) => {\n//   if (\n//     error.response &&\n//     error.response.status &&\n//     [401, 403].indexOf(error.response.status) !== -1\n//   )\n//     showError(\"Ошибка авторизации\");\n//   else if (error.response && error.response.data && error.response.data.message)\n//     showError(error.response.data.message);\n//   else showError(error.message);\n//   return Promise.reject(error);\n// });\n\n// export default new BackendService();\n\nimport axios from \"axios\";\nimport Utils from \"../utils/Utils\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { alertActions } from \"../utils/Rdx\";\n\nconst API_URL = \"http://localhost:8081/api/v1\";\nconst AUTH_URL = \"http://localhost:8081/auth\";\n\nconst BackendService = () => {\n  const dispatch = useDispatch();\n\n  const login = (login, password) => {\n    return axios.post(`${AUTH_URL}/login`, { login, password });\n  };\n\n  const logout = () => {\n    return axios.get(`${AUTH_URL}/logout`, {\n      headers: { Authorization: Utils.getToken() },\n    });\n  };\n\n  const showError = (msg) => {\n    dispatch(alertActions.error(msg));\n  };\n\n  useEffect(() => {\n    const requestInterceptor = axios.interceptors.request.use(\n      (config) => {\n        dispatch(alertActions.clear());\n        let token = Utils.getToken();\n        if (token) config.headers.Authorization = token;\n        return config;\n      },\n      (error) => {\n        showError(error.message);\n        return Promise.reject(error);\n      }\n    );\n\n    const responseInterceptor = axios.interceptors.response.use(\n      undefined,\n      (error) => {\n        if (\n          error.response &&\n          error.response.status &&\n          [401, 403].indexOf(error.response.status) !== -1\n        )\n          showError(\"Ошибка авторизации\");\n        else if (\n          error.response &&\n          error.response.data &&\n          error.response.data.message\n        )\n          showError(error.response.data.message);\n        else showError(error.message);\n        return Promise.reject(error);\n      }\n    );\n\n    return () => {\n      // Cleanup interceptors\n      axios.interceptors.request.eject(requestInterceptor);\n      axios.interceptors.response.eject(responseInterceptor);\n    };\n  }, [dispatch]);\n\n  return { login, logout };\n};\n\nexport default BackendService;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}